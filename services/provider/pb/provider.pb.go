// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: provider.proto

package providerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StorageType of the storageclassClaim
type FulfillStorageClassClaimRequest_StorageType int32

const (
	FulfillStorageClassClaimRequest_SHAREDFILESYSTEM FulfillStorageClassClaimRequest_StorageType = 0
	FulfillStorageClassClaimRequest_BLOCKPOOL        FulfillStorageClassClaimRequest_StorageType = 1
)

// Enum value maps for FulfillStorageClassClaimRequest_StorageType.
var (
	FulfillStorageClassClaimRequest_StorageType_name = map[int32]string{
		0: "SHAREDFILESYSTEM",
		1: "BLOCKPOOL",
	}
	FulfillStorageClassClaimRequest_StorageType_value = map[string]int32{
		"SHAREDFILESYSTEM": 0,
		"BLOCKPOOL":        1,
	}
)

func (x FulfillStorageClassClaimRequest_StorageType) Enum() *FulfillStorageClassClaimRequest_StorageType {
	p := new(FulfillStorageClassClaimRequest_StorageType)
	*p = x
	return p
}

func (x FulfillStorageClassClaimRequest_StorageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FulfillStorageClassClaimRequest_StorageType) Descriptor() protoreflect.EnumDescriptor {
	return file_provider_proto_enumTypes[0].Descriptor()
}

func (FulfillStorageClassClaimRequest_StorageType) Type() protoreflect.EnumType {
	return &file_provider_proto_enumTypes[0]
}

func (x FulfillStorageClassClaimRequest_StorageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FulfillStorageClassClaimRequest_StorageType.Descriptor instead.
func (FulfillStorageClassClaimRequest_StorageType) EnumDescriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{9, 0}
}

// OnboardConsumerRequest holds the required information to validate the consumer and create StorageConsumer
// resource on the StorageProvider cluster
type OnboardConsumerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// onboardingTicket authenticates the storage consumer cluster
	OnboardingTicket string `protobuf:"bytes,1,opt,name=onboardingTicket,proto3" json:"onboardingTicket,omitempty"`
	// consumerName is the name of the consumer that is used to create the storageConsumer resource
	ConsumerName string `protobuf:"bytes,2,opt,name=consumerName,proto3" json:"consumerName,omitempty"`
}

func (x *OnboardConsumerRequest) Reset() {
	*x = OnboardConsumerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnboardConsumerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnboardConsumerRequest) ProtoMessage() {}

func (x *OnboardConsumerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnboardConsumerRequest.ProtoReflect.Descriptor instead.
func (*OnboardConsumerRequest) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{0}
}

func (x *OnboardConsumerRequest) GetOnboardingTicket() string {
	if x != nil {
		return x.OnboardingTicket
	}
	return ""
}

func (x *OnboardConsumerRequest) GetConsumerName() string {
	if x != nil {
		return x.ConsumerName
	}
	return ""
}

// OnboardConsumerResponse holds the response for OnboardConsumer API request
type OnboardConsumerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// K8s UID (UUID) of the consumer cluster
	StorageConsumerUUID string `protobuf:"bytes,1,opt,name=storageConsumerUUID,proto3" json:"storageConsumerUUID,omitempty"`
}

func (x *OnboardConsumerResponse) Reset() {
	*x = OnboardConsumerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnboardConsumerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnboardConsumerResponse) ProtoMessage() {}

func (x *OnboardConsumerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnboardConsumerResponse.ProtoReflect.Descriptor instead.
func (*OnboardConsumerResponse) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{1}
}

func (x *OnboardConsumerResponse) GetStorageConsumerUUID() string {
	if x != nil {
		return x.StorageConsumerUUID
	}
	return ""
}

// StorageConfigRequest holds the information required generate the json config for connecting to storage provider cluster
type StorageConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// K8s UID (UUID) of the consumer cluster
	StorageConsumerUUID string `protobuf:"bytes,1,opt,name=storageConsumerUUID,proto3" json:"storageConsumerUUID,omitempty"`
}

func (x *StorageConfigRequest) Reset() {
	*x = StorageConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageConfigRequest) ProtoMessage() {}

func (x *StorageConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageConfigRequest.ProtoReflect.Descriptor instead.
func (*StorageConfigRequest) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{2}
}

func (x *StorageConfigRequest) GetStorageConsumerUUID() string {
	if x != nil {
		return x.StorageConsumerUUID
	}
	return ""
}

// ExternalResource holds the configuration data of the resources in external storage cluster
type ExternalResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the external storage cluster resource
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// Kind of the external storage cluster resource
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	// Data contains the contents of the external cluster resource
	Data []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *ExternalResource) Reset() {
	*x = ExternalResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalResource) ProtoMessage() {}

func (x *ExternalResource) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalResource.ProtoReflect.Descriptor instead.
func (*ExternalResource) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{3}
}

func (x *ExternalResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExternalResource) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ExternalResource) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// StorageConfigResponse holds the response for the GetStorageConfig API request
type StorageConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ExternalResource holds the configuration data of external storage cluster
	ExternalResource []*ExternalResource `protobuf:"bytes,1,rep,name=externalResource,proto3" json:"externalResource,omitempty"`
}

func (x *StorageConfigResponse) Reset() {
	*x = StorageConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageConfigResponse) ProtoMessage() {}

func (x *StorageConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageConfigResponse.ProtoReflect.Descriptor instead.
func (*StorageConfigResponse) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{4}
}

func (x *StorageConfigResponse) GetExternalResource() []*ExternalResource {
	if x != nil {
		return x.ExternalResource
	}
	return nil
}

// OffboardConsumerRequest holds the required information to delete the StorageConsumer CR on the storage provider cluster.
type OffboardConsumerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// K8s UID (UUID) of the consumer cluster
	StorageConsumerUUID string `protobuf:"bytes,1,opt,name=storageConsumerUUID,proto3" json:"storageConsumerUUID,omitempty"`
}

func (x *OffboardConsumerRequest) Reset() {
	*x = OffboardConsumerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OffboardConsumerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffboardConsumerRequest) ProtoMessage() {}

func (x *OffboardConsumerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffboardConsumerRequest.ProtoReflect.Descriptor instead.
func (*OffboardConsumerRequest) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{5}
}

func (x *OffboardConsumerRequest) GetStorageConsumerUUID() string {
	if x != nil {
		return x.StorageConsumerUUID
	}
	return ""
}

// OffboardConsumerResponse holds the response for the OffboardConsumer API request
type OffboardConsumerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OffboardConsumerResponse) Reset() {
	*x = OffboardConsumerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OffboardConsumerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffboardConsumerResponse) ProtoMessage() {}

func (x *OffboardConsumerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffboardConsumerResponse.ProtoReflect.Descriptor instead.
func (*OffboardConsumerResponse) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{6}
}

// AcknowledgeOnboardingRequest holds the information required to acknowledge the onboarding
type AcknowledgeOnboardingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// K8s UID (UUID) of the consumer cluster
	StorageConsumerUUID string `protobuf:"bytes,1,opt,name=storageConsumerUUID,proto3" json:"storageConsumerUUID,omitempty"`
}

func (x *AcknowledgeOnboardingRequest) Reset() {
	*x = AcknowledgeOnboardingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeOnboardingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeOnboardingRequest) ProtoMessage() {}

func (x *AcknowledgeOnboardingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeOnboardingRequest.ProtoReflect.Descriptor instead.
func (*AcknowledgeOnboardingRequest) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{7}
}

func (x *AcknowledgeOnboardingRequest) GetStorageConsumerUUID() string {
	if x != nil {
		return x.StorageConsumerUUID
	}
	return ""
}

// AcknowledgeOnboardingResponse holds the response for the AcknowledgeOnboarding API request
type AcknowledgeOnboardingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcknowledgeOnboardingResponse) Reset() {
	*x = AcknowledgeOnboardingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeOnboardingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeOnboardingResponse) ProtoMessage() {}

func (x *AcknowledgeOnboardingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeOnboardingResponse.ProtoReflect.Descriptor instead.
func (*AcknowledgeOnboardingResponse) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{8}
}

// FulfillStorageClassClaimRequest holds the information required to
// create the StorageclassClaim CR on provider cluster.
type FulfillStorageClassClaimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the storageclassclaim on the consumer cluster.
	StorageClassClaimName string `protobuf:"bytes,1,opt,name=storageClassClaimName,proto3" json:"storageClassClaimName,omitempty"`
	// K8s UID (UUID) of the consumer cluster.
	StorageConsumerUUID string `protobuf:"bytes,2,opt,name=storageConsumerUUID,proto3" json:"storageConsumerUUID,omitempty"`
	// encryption method of the storageclassclaim.
	EncryptionMethod string                                      `protobuf:"bytes,3,opt,name=encryptionMethod,proto3" json:"encryptionMethod,omitempty"`
	StorageType      FulfillStorageClassClaimRequest_StorageType `protobuf:"varint,4,opt,name=storageType,proto3,enum=provider.FulfillStorageClassClaimRequest_StorageType" json:"storageType,omitempty"`
	// storageProfile of the storageclassclaim.
	StorageProfile string `protobuf:"bytes,5,opt,name=storageProfile,proto3" json:"storageProfile,omitempty"`
}

func (x *FulfillStorageClassClaimRequest) Reset() {
	*x = FulfillStorageClassClaimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FulfillStorageClassClaimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FulfillStorageClassClaimRequest) ProtoMessage() {}

func (x *FulfillStorageClassClaimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FulfillStorageClassClaimRequest.ProtoReflect.Descriptor instead.
func (*FulfillStorageClassClaimRequest) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{9}
}

func (x *FulfillStorageClassClaimRequest) GetStorageClassClaimName() string {
	if x != nil {
		return x.StorageClassClaimName
	}
	return ""
}

func (x *FulfillStorageClassClaimRequest) GetStorageConsumerUUID() string {
	if x != nil {
		return x.StorageConsumerUUID
	}
	return ""
}

func (x *FulfillStorageClassClaimRequest) GetEncryptionMethod() string {
	if x != nil {
		return x.EncryptionMethod
	}
	return ""
}

func (x *FulfillStorageClassClaimRequest) GetStorageType() FulfillStorageClassClaimRequest_StorageType {
	if x != nil {
		return x.StorageType
	}
	return FulfillStorageClassClaimRequest_SHAREDFILESYSTEM
}

func (x *FulfillStorageClassClaimRequest) GetStorageProfile() string {
	if x != nil {
		return x.StorageProfile
	}
	return ""
}

// FulfillStorageClassClaimResponse holds the response for the FulfillStorageClassClaim API request.
type FulfillStorageClassClaimResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FulfillStorageClassClaimResponse) Reset() {
	*x = FulfillStorageClassClaimResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FulfillStorageClassClaimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FulfillStorageClassClaimResponse) ProtoMessage() {}

func (x *FulfillStorageClassClaimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FulfillStorageClassClaimResponse.ProtoReflect.Descriptor instead.
func (*FulfillStorageClassClaimResponse) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{10}
}

// RevokeStorageClassClaimRequest holds the information required to delete the
// StorageclassClaim CR on provider cluster.
type RevokeStorageClassClaimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the storageclassclaim on the consumer cluster.
	StorageClassClaimName string `protobuf:"bytes,1,opt,name=storageClassClaimName,proto3" json:"storageClassClaimName,omitempty"`
	// K8s UID (UUID) of the consumer cluster.
	StorageConsumerUUID string `protobuf:"bytes,2,opt,name=storageConsumerUUID,proto3" json:"storageConsumerUUID,omitempty"`
}

func (x *RevokeStorageClassClaimRequest) Reset() {
	*x = RevokeStorageClassClaimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeStorageClassClaimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeStorageClassClaimRequest) ProtoMessage() {}

func (x *RevokeStorageClassClaimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeStorageClassClaimRequest.ProtoReflect.Descriptor instead.
func (*RevokeStorageClassClaimRequest) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{11}
}

func (x *RevokeStorageClassClaimRequest) GetStorageClassClaimName() string {
	if x != nil {
		return x.StorageClassClaimName
	}
	return ""
}

func (x *RevokeStorageClassClaimRequest) GetStorageConsumerUUID() string {
	if x != nil {
		return x.StorageConsumerUUID
	}
	return ""
}

// RevokeStorageClassClaimResponse holds the response for the RevokeStorageClassClaim API request.
type RevokeStorageClassClaimResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeStorageClassClaimResponse) Reset() {
	*x = RevokeStorageClassClaimResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeStorageClassClaimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeStorageClassClaimResponse) ProtoMessage() {}

func (x *RevokeStorageClassClaimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeStorageClassClaimResponse.ProtoReflect.Descriptor instead.
func (*RevokeStorageClassClaimResponse) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{12}
}

// StorageClassClaimConfigRequest holds the information required to generate the
// json config for StorageClassClaim specific resources.
type StorageClassClaimConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the storageclassclaim on the consumer cluster.
	StorageClassClaimName string `protobuf:"bytes,1,opt,name=storageClassClaimName,proto3" json:"storageClassClaimName,omitempty"`
	// K8s UID (UUID) of the consumer cluster.
	StorageConsumerUUID string `protobuf:"bytes,2,opt,name=storageConsumerUUID,proto3" json:"storageConsumerUUID,omitempty"`
}

func (x *StorageClassClaimConfigRequest) Reset() {
	*x = StorageClassClaimConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageClassClaimConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageClassClaimConfigRequest) ProtoMessage() {}

func (x *StorageClassClaimConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageClassClaimConfigRequest.ProtoReflect.Descriptor instead.
func (*StorageClassClaimConfigRequest) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{13}
}

func (x *StorageClassClaimConfigRequest) GetStorageClassClaimName() string {
	if x != nil {
		return x.StorageClassClaimName
	}
	return ""
}

func (x *StorageClassClaimConfigRequest) GetStorageConsumerUUID() string {
	if x != nil {
		return x.StorageConsumerUUID
	}
	return ""
}

// StorageClassClaimConfigResponse holds the response for the StorageClassClaimConfig API request.
type StorageClassClaimConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ExternalResource holds the configuration data of external storage cluster
	ExternalResource []*ExternalResource `protobuf:"bytes,1,rep,name=externalResource,proto3" json:"externalResource,omitempty"`
}

func (x *StorageClassClaimConfigResponse) Reset() {
	*x = StorageClassClaimConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageClassClaimConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageClassClaimConfigResponse) ProtoMessage() {}

func (x *StorageClassClaimConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageClassClaimConfigResponse.ProtoReflect.Descriptor instead.
func (*StorageClassClaimConfigResponse) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{14}
}

func (x *StorageClassClaimConfigResponse) GetExternalResource() []*ExternalResource {
	if x != nil {
		return x.ExternalResource
	}
	return nil
}

type ReportStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageConsumerUUID string `protobuf:"bytes,1,opt,name=storageConsumerUUID,proto3" json:"storageConsumerUUID,omitempty"`
}

func (x *ReportStatusRequest) Reset() {
	*x = ReportStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStatusRequest) ProtoMessage() {}

func (x *ReportStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStatusRequest.ProtoReflect.Descriptor instead.
func (*ReportStatusRequest) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{15}
}

func (x *ReportStatusRequest) GetStorageConsumerUUID() string {
	if x != nil {
		return x.StorageConsumerUUID
	}
	return ""
}

type ReportStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportStatusResponse) Reset() {
	*x = ReportStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStatusResponse) ProtoMessage() {}

func (x *ReportStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStatusResponse.ProtoReflect.Descriptor instead.
func (*ReportStatusResponse) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{16}
}

var File_provider_proto protoreflect.FileDescriptor

var file_provider_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x16,
	0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x17, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x55,
	0x55, 0x49, 0x44, 0x22, 0x48, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x22, 0x4e, 0x0a,
	0x10, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5f, 0x0a,
	0x15, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x10, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x4b,
	0x0a, 0x17, 0x4f, 0x66, 0x66, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x22, 0x1a, 0x0a, 0x18, 0x4f,
	0x66, 0x66, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a, 0x1c, 0x41, 0x63, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x22, 0x1f, 0x0a, 0x1d, 0x41, 0x63, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xea, 0x02, 0x0a, 0x1f, 0x46,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x15, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x57, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x22, 0x32, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x48, 0x41, 0x52, 0x45, 0x44, 0x46, 0x49, 0x4c, 0x45,
	0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x50, 0x4f, 0x4f, 0x4c, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x20, 0x46, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x1e,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x15, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x22, 0x21, 0x0a, 0x1f, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x1e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x15,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x55, 0x55, 0x49, 0x44, 0x22, 0x69, 0x0a, 0x1f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x10, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x47, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xb4, 0x06, 0x0a, 0x0b, 0x4f, 0x43, 0x53, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x58, 0x0a, 0x0f, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5b, 0x0a, 0x10, 0x4f, 0x66, 0x66, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x4f, 0x66, 0x66, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x4f, 0x66, 0x66, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a,
	0x0a, 0x15, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x18, 0x46, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x46, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x70, 0x0a, 0x17, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x73, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x3b, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_provider_proto_rawDescOnce sync.Once
	file_provider_proto_rawDescData = file_provider_proto_rawDesc
)

func file_provider_proto_rawDescGZIP() []byte {
	file_provider_proto_rawDescOnce.Do(func() {
		file_provider_proto_rawDescData = protoimpl.X.CompressGZIP(file_provider_proto_rawDescData)
	})
	return file_provider_proto_rawDescData
}

var file_provider_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_provider_proto_goTypes = []interface{}{
	(FulfillStorageClassClaimRequest_StorageType)(0), // 0: provider.FulfillStorageClassClaimRequest.StorageType
	(*OnboardConsumerRequest)(nil),                   // 1: provider.OnboardConsumerRequest
	(*OnboardConsumerResponse)(nil),                  // 2: provider.OnboardConsumerResponse
	(*StorageConfigRequest)(nil),                     // 3: provider.StorageConfigRequest
	(*ExternalResource)(nil),                         // 4: provider.ExternalResource
	(*StorageConfigResponse)(nil),                    // 5: provider.StorageConfigResponse
	(*OffboardConsumerRequest)(nil),                  // 6: provider.OffboardConsumerRequest
	(*OffboardConsumerResponse)(nil),                 // 7: provider.OffboardConsumerResponse
	(*AcknowledgeOnboardingRequest)(nil),             // 8: provider.AcknowledgeOnboardingRequest
	(*AcknowledgeOnboardingResponse)(nil),            // 9: provider.AcknowledgeOnboardingResponse
	(*FulfillStorageClassClaimRequest)(nil),          // 10: provider.FulfillStorageClassClaimRequest
	(*FulfillStorageClassClaimResponse)(nil),         // 11: provider.FulfillStorageClassClaimResponse
	(*RevokeStorageClassClaimRequest)(nil),           // 12: provider.RevokeStorageClassClaimRequest
	(*RevokeStorageClassClaimResponse)(nil),          // 13: provider.RevokeStorageClassClaimResponse
	(*StorageClassClaimConfigRequest)(nil),           // 14: provider.StorageClassClaimConfigRequest
	(*StorageClassClaimConfigResponse)(nil),          // 15: provider.StorageClassClaimConfigResponse
	(*ReportStatusRequest)(nil),                      // 16: provider.ReportStatusRequest
	(*ReportStatusResponse)(nil),                     // 17: provider.ReportStatusResponse
}
var file_provider_proto_depIdxs = []int32{
	4,  // 0: provider.StorageConfigResponse.externalResource:type_name -> provider.ExternalResource
	0,  // 1: provider.FulfillStorageClassClaimRequest.storageType:type_name -> provider.FulfillStorageClassClaimRequest.StorageType
	4,  // 2: provider.StorageClassClaimConfigResponse.externalResource:type_name -> provider.ExternalResource
	1,  // 3: provider.OCSProvider.OnboardConsumer:input_type -> provider.OnboardConsumerRequest
	3,  // 4: provider.OCSProvider.GetStorageConfig:input_type -> provider.StorageConfigRequest
	6,  // 5: provider.OCSProvider.OffboardConsumer:input_type -> provider.OffboardConsumerRequest
	8,  // 6: provider.OCSProvider.AcknowledgeOnboarding:input_type -> provider.AcknowledgeOnboardingRequest
	10, // 7: provider.OCSProvider.FulfillStorageClassClaim:input_type -> provider.FulfillStorageClassClaimRequest
	12, // 8: provider.OCSProvider.RevokeStorageClassClaim:input_type -> provider.RevokeStorageClassClaimRequest
	14, // 9: provider.OCSProvider.GetStorageClassClaimConfig:input_type -> provider.StorageClassClaimConfigRequest
	16, // 10: provider.OCSProvider.ReportStatus:input_type -> provider.ReportStatusRequest
	2,  // 11: provider.OCSProvider.OnboardConsumer:output_type -> provider.OnboardConsumerResponse
	5,  // 12: provider.OCSProvider.GetStorageConfig:output_type -> provider.StorageConfigResponse
	7,  // 13: provider.OCSProvider.OffboardConsumer:output_type -> provider.OffboardConsumerResponse
	9,  // 14: provider.OCSProvider.AcknowledgeOnboarding:output_type -> provider.AcknowledgeOnboardingResponse
	11, // 15: provider.OCSProvider.FulfillStorageClassClaim:output_type -> provider.FulfillStorageClassClaimResponse
	13, // 16: provider.OCSProvider.RevokeStorageClassClaim:output_type -> provider.RevokeStorageClassClaimResponse
	15, // 17: provider.OCSProvider.GetStorageClassClaimConfig:output_type -> provider.StorageClassClaimConfigResponse
	17, // 18: provider.OCSProvider.ReportStatus:output_type -> provider.ReportStatusResponse
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_provider_proto_init() }
func file_provider_proto_init() {
	if File_provider_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_provider_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnboardConsumerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnboardConsumerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OffboardConsumerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OffboardConsumerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeOnboardingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeOnboardingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FulfillStorageClassClaimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FulfillStorageClassClaimResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeStorageClassClaimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeStorageClassClaimResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageClassClaimConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageClassClaimConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_provider_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_provider_proto_goTypes,
		DependencyIndexes: file_provider_proto_depIdxs,
		EnumInfos:         file_provider_proto_enumTypes,
		MessageInfos:      file_provider_proto_msgTypes,
	}.Build()
	File_provider_proto = out.File
	file_provider_proto_rawDesc = nil
	file_provider_proto_goTypes = nil
	file_provider_proto_depIdxs = nil
}
